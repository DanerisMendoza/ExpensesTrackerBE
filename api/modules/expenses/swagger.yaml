paths:
  /getAllExpenses:
    get:
      tags:
        - Expenses
      responses:
        "200":
          description: Successfully retrieved expenses.
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                      description: Unique identifier for the expense.
                    name:
                      type: string
                      description: Name or description of the expense.
                    amount:
                      type: number
                      description: Expense amount.
        "500":
          description: Internal server error.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Error message explaining the failure.

  /getAllExpenses/me:
    get:
      tags:
        - Expenses
      summary: Retrieve paginated, searchable, and sortable list of expenses for the authenticated user.
      parameters:
        - name: page
          in: query
          description: The page number to retrieve.
          required: false
          schema:
            type: integer
            default: 1
        - name: limit
          in: query
          description: The number of records to retrieve per page.
          required: false
          schema:
            type: integer
            default: 10
        - name: search
          in: query
          description: Search term to filter expenses by title.
          required: false
          schema:
            type: string
        - name: sortBy
          in: query
          description: Field to sort by (e.g., title, amount, createdAt).
          required: false
          schema:
            type: string
            enum:
              - title
              - amount
              - createdAt
            default: createdAt
        - name: sortDirection
          in: query
          description: Sorting direction (asc for ascending, desc for descending).
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
            default: desc
      responses:
        "200":
          description: Successfully retrieved expenses.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        _id:
                          type: string
                          description: Unique identifier for the expense.
                        title:
                          type: string
                          description: Name or description of the expense.
                        amount:
                          type: number
                          description: Expense amount.
                        spent_at:
                          type: string
                          format: date-time
                          description: Date and time when the expense was spent.
                        createdAt:
                          type: string
                          format: date-time
                          description: Timestamp of when the expense was created.
                        updatedAt:
                          type: string
                          format: date-time
                          description: Timestamp of when the expense was last updated.
                  page:
                    type: integer
                    description: The current page number.
                  totalPages:
                    type: integer
                    description: Total number of pages available.
                  totalExpenses:
                    type: integer
                    description: Total number of expenses for the user.
        "500":
          description: Internal server error.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Error message explaining the failure.

  /createExpenses:
    post:
      tags:
        - Expenses
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - title
                - amount
              properties:
                title:
                  type: string
                  description: Title or description of the expense.
                  example: water bill
                amount:
                  type: number
                  description: Amount of the expense.
                  example: 200
      responses:
        "200":
          description: Expense created successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Success message.
                  data:
                    type: object
                    properties:
                      id:
                        type: string
                        description: Unique identifier of the created expense.
                      user_id:
                        type: string
                        description: User ID associated with the expense.
                      title:
                        type: string
                        description: Title or description of the expense.
                      amount:
                        type: number
                        description: Amount of the expense.
                      createdAt:
                        type: string
                        format: date-time
                        description: Timestamp when the expense was created.
                      updatedAt:
                        type: string
                        format: date-time
                        description: Timestamp when the expense was last updated.
        "500":
          description: Internal server error.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Error message explaining the failure.

  /deleteAllExpenses:
    delete:
      tags:
        - Expenses
      responses:
        "200":
          description: All expenses deleted successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        "500":
          description: Server error

  /deleteExpenseById/{id}:
    delete:
      tags:
        - Expenses
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
            description: The ID of the expense to delete.
      responses:
        "200":
          description: Expense deleted successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Expense deleted successfully!"
        "404":
          description: Expense not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Expense not found"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Error message here"

  /countExpenses:
    get:
      tags:
        - Expenses
      responses:
        200:
          description: Successful response with the total count of expenses.
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    description: Total number of expenses.
                    example: 42
        401:
          description: Unauthorized - User is not authenticated or lacks permissions.
        500:
          description: Internal Server Error - An error occurred while processing the request.

  /seederExpenses/me:
    post:
      tags:
        - Expenses
      security:
        - BearerAuth: []
      requestBody:
        description: The user ID for which the expenses are being created.
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                user_id:
                  type: string
                  example: ""
                seed_length:
                  type: number
                  example: 50
      responses:
        "200":
          description: Expenses created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Expenses created successfully!"
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        user_id:
                          type: string
                          description: The user ID of the created expense record.
                        title:
                          type: string
                          description: The title/description of the expense.
                        amount:
                          type: number
                          format: float
                          description: The amount of the expense.
                        _id:
                          type: string
                          description: The unique ID of the expense record.
        "400":
          description: Bad request (invalid or missing user_id)
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "User ID is required."
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Internal server error."
